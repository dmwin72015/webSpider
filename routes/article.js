var express = require('express');var router = express.Router();const pach = require('../model/article');const emit = require('../util/myEmitter').myEmit;const CONFIG = {    url: "http://huaban.com"};/* GET home page. */router.get('/', (req, res, next) => {    res.render('article/getarticle', {        title: '获取文章'    });}).get('/hello', (req, res, next) => {    //TODO 功能未添加    pach.saveImg('http://img01.imgcdc.com/grab/img/20160620/12161466411361.png', function(err, data) {        if (err) {            next(err);        } else {            res.end('获取成功!!!!!');        }    });}).get('/img', (req, res, next) => {    res.render('article/imglist');}).get('/article', (req, res, next) => {    "use strict";    pach.getArticle((err, rows) => {        if (err) {            next(err);        } else {            console.log(rows[1]['pub_time']);            res.render('article/article_list', {                rows: rows            });        }    });}).get('/article/:id', (req, res, next) => {    "use strict";    var id = req.params.id;    if (id) {        pach.getArticleById(id, (err, rows) => {            if (err) {                next(err);            } else {                console.log(rows);                if (rows.length) {                    var data = rows[0];                    res.render('article/article_detail', {                        art_title: data['arti_name'],                        art_subTitle: data['arti_name'],                        pub_time: data['pub_time'],                        sSource_href: '',                        sSource: data['arti_author_name'],                        editor: data['arti_author_name'],                        art_content: data['arti_htmlcontent']                    })                } else {                    next({                        message: '没有找到这篇文章',                        error: {}                    })                }            }        });    }}).post('/hello', (req, res, next) => {    "use strict";    var url = req.body.url;    var arr = [];    var opt = {        charset: 'gb2312',        baseUrl: 'http://www.chinanews.com'    };    if (url) {        console.log('进入url判断内部', '---62');        pach.getDom(url, opt, (err, $) => {            if (err) {                console.log('进入【没有】获取到DOM判断条件', '---65');                res.render('error', $);            } else {                console.log('进入获取到DOM判断条件', '---68');                $('a').each(function(i, ele) {                    var href = $(ele).attr('href');                    if (/^http:\/\/www.chinanews.com.*?html$/i.test(href)) {                        arr.push(href);                    }                });                var i = 0,                    len = arr.length,                    arrRes = [];                console.log('获取到所有的url:' + len, '---78');                for (; i < len; i++) {                    (function(i) {                        pach.saveArticle(arr[i], opt, (err, data) => {                            if (err) {                                next(data);                                return;                            } else {                                arrRes.push(JSON.stringify(data));                            }                            if (i >= len) {                                // res.send(arrRes);                            }                        });                    })(i)                }            }        });    }    return;});/** * 获取电影天堂的电影链接 * * */router.post('/movie', (req, res, next) => {    "use strict";    var url = req.body.url;    var arrRes = [];    var arrkeys = [];    var opt = {        charset: 'gb2312'    };    if (!url) return;    var myEmit = emit('save', function(arr) {    });    pach.getDom(url, opt, (err, $) => {        if (err) next(err);        $('div.co_area2 div.co_content8 td a').each((i, ele) => {            var sHref = $(ele).attr('href');            var sName = $(ele).text();            if (sName != '最新电影下载') {                if (arrkeys.indexOf(sName) < 0) {                    arrRes.push({                        'name': sName,                        'href': sHref                    })                }            }        });        myEmit.emit('save', arrRes);        res.send(arrRes);    });    return;});//获取页面中文章的url的借口,返回获取到的所有的文章连接router.post('/ruanyf', (req, res, next) => {    var url = req.body.url;    if (!url) {        res.send({'errCode':0,'msg':'请传入一个有效的url地址'}).end();    } else {        pach.getryf(url, (data) => {            res.send(data);        });    }    return;});module.exports = router;